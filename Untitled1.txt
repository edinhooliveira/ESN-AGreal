//			//código estabilização
//			if(mov <= size_stab) { //definir tamanho de estabilização
//				//ESN->ESNstab(sensores); //conjunto de estabilização, utilizado para "inicializar"
//				conjunto_stab[mov] = sensores;
//	
//			} //else if(i <= 100){ //size_stab + tam_conj_treinamento //size_stab + 100
//				//ESN->addTrainSet(sensores, acoes); 
//			}
//			
//			for(int aux; aux < size_stab; aux++ ){
//				cout<<"Conjunto Estabilização"<<endl;
//				cout<< "Item Estab :" << *(conjunto_stab + aux) << endl;
//			}	
//			for(int aux; aux < 100; aux++ ){
//				cout<<"Conjunto Treinamento"<<endl;
//				cout<< "Item Estab :" << *(sensores + aux) << endl;
//			}


//		cout << "ENTRADADS DA ESN" <<  endl;
//		for(int x=0;x < (nrMov * nrRodadas) ;x++)  // loop 3 times for three lines
//    	{
//        	for(int y=0;y<4;y++)  // loop for the three elements on the line
//        	{	
//            	cout<<inputs[x][y];  // display the current element out of the array
//       		}
//    		cout<<endl;  // when the inner loop is done, go to a new line
//    	}	
//    	cout << "SAIDAS EXEMPLO" <<  endl;
//		for(int z=0;z < (nrMov * nrRodadas); z++)  // loop 3 times for three lines
//		{
//			cout<<outputs[z] << "\t";
//			
//		}

//	//separar conjunto para estabilização
//	for(int i; i < size_stab; i++){
//		conjEstab[i] = inputs[i][0];
//	}
//	
//	//Estabilização
//	ESN->ESNstab(conjEstab); //conjunto de estabilização, utilizado para "inicializar"
//	
//	ESN->addTrainSet(sensores, outputs);	


